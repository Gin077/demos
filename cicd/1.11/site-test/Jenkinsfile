def gitCommit() {
    sh "git rev-parse HEAD > GIT_COMMIT"
def gitCommit = readFile('GIT_COMMIT').trim()
    sh "rm -f GIT_COMMIT"
    return gitCommit
}

node {
    // Checkout source code from Git
    stage 'Checkout'
    checkout scm

    // Build Docker image
    stage 'Build'
    sh "docker build -t cd.example.com:50000/root/site-test:${gitCommit()} ."

    // Log in and push image to GitLab
    stage 'Publish'
    withCredentials(
        [[
            $class: 'UsernamePasswordMultiBinding',
            credentialsId: 'gitlab',
            passwordVariable: 'GITLAB_PASSWORD',
            usernameVariable: 'GITLAB_USERNAME'
        ]]
    ) {
        sh "docker login -u ${env.GITLAB_USERNAME} -p ${env.GITLAB_PASSWORD} cd.example.com:50000"
        sh "docker push cd.example.com:50000/root/site-test:${gitCommit()}"
    }

    // Test links in file
    stage 'Test'
    withCredentials(
        [[
            $class: 'UsernamePasswordMultiBinding',
            credentialsId: 'gitlab',
            passwordVariable: 'GITLAB_PASSWORD',
            usernameVariable: 'GITLAB_USERNAME'
        ]]
    ) {
      sh "docker login -u ${env.GITLAB_USERNAME} -p ${env.GITLAB_PASSWORD} cd.example.com:50000"
      sh "docker run -p 8085:80 -d --name=test-container-${env.BUILD_NUMBER} cd.example.com:50000/root/site-test:${gitCommit()}"
      sh "docker exec test-container-${env.BUILD_NUMBER} linkchecker /usr/share/nginx/html/index.html"
      sh "docker kill test-container-${env.BUILD_NUMBER}"
      sh "docker rm test-container-${env.BUILD_NUMBER}"
   }

    // Deploy
    stage 'Deploy'

    marathon(
        url: 'http://marathon.mesos:8080',
        forceUpdate: false,
        filename: 'marathon.json',
        id: 'site-test',
        docker: "cd.example.com:50000/root/site-test:${gitCommit()}".toString()
    )
}
